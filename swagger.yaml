swagger: '2.0'
info:
  title: Snippets API
  description: Test description
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: contact@snippets.local
  license:
    name: BSD License
  version: v1
host: 127.0.0.1:8000
schemes:
  - http
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /add_article:
    post:
      operationId: add_article_create
      consumes:
      - multipart/form-data
      parameters:
      - name: title_article
        in: formData
        description: название файла только <b>английскими буквами/цифрами</b>, на конце всегда <b>'.pdf' </b>
        required: true
        type: string
      - name: article
        in: formData
        description: 'Файл для загрузки'
        required: true
        type: file
      - name: title_permission
        in: formData
        description: название файла только <b>английскими буквами/цифрами</b>, на конце всегда <b>'.pdf' </b>
        required: true
        type: string
      - name: permission
        in: formData
        description: 'Файл для загрузки'
        required: true
        type: file
      - name: name_article
        in: formData
        description: 'Тема статьи'
        required: true
        type: string
      - name: year_of_publication
        in: formData
        description: 'Год публикации (YYYY-MM-DD)'
        required: true
        type: string
      responses:
        '200':
          description: '"status_article": 200,
  "status_permission": 200,'
      tags:
        - add_article
    parameters: []
  /articles:
    get:
      operationId: articles_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - articles
    parameters: []
  /articles/{id}:
    get:
      operationId: articles_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - articles
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /articles/{id}/delete:
    post:
      operationId: articles_delete_create
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - articles
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /articles/{id}/edit:
    put:
      operationId: articles_edit_update
      description: ''
      consumes:
      - multipart/form-data
      parameters:
      - name: title_article
        in: formData
        description: название файла только <b>английскими буквами/цифрами</b>, на конце всегда <b>'.pdf' </b> 
        required: true
        type: string
      - name: article
        in: formData
        description: 'Файл для загрузки. Если загрузили, то <b>оба файла обязательно!</b>'
        required: false
        type: file
      - name: title_permission
        in: formData
        description: название файла только <b>английскими буквами/цифрами</b>, на конце всегда <b>'.pdf' </b> 
        required: true
        type: string
      - name: permission
        in: formData
        description: 'Файл для загрузки. Если загрузили, то <b>оба файла обязательно!</b>'
        required: false
        type: file
      - name: name_article
        in: formData
        description: 'Тема статьи'
        required: true
        type: string
      - name: year_of_publication
        in: formData
        description: 'Год публикации (YYYY-MM-DD)'
        required: true
        type: string
      - name: url_article
        in: formData
        description: 'Ссылка на статью'
        required: true
        type: string
      - name: url_permission
        in: formData
        description: 'Ссылка на разрешение'
        required: true
        type: string
      - name: author
        in: formData
        description: 'Автор статьи'
        required: true
        type: integer
      responses:
        '200':
          description: ''
      tags:
        - articles
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /auth/token/login/:
    post:
      operationId: auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenCreate'
      tags:
        - auth
    parameters: []
  /auth/token/logout/:
    post:
      operationId: auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - auth
    parameters: []
  /auth/users/:
    get:
      operationId: auth_users_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - auth
    post:
      operationId: auth_users_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserCreate'
      tags:
        - auth
    parameters: []
  /auth/users/activation/:
    post:
      operationId: auth_users_activation
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Activation'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Activation'
      tags:
        - auth
    parameters: []
  /auth/users/me/:
    get:
      operationId: auth_users_me_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - auth
    put:
      operationId: auth_users_me_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - auth
    patch:
      operationId: auth_users_me_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - auth
    delete:
      operationId: auth_users_me_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - auth
    parameters: []
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - auth
    parameters: []
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - auth
    parameters: []
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      tags:
        - auth
    parameters: []
  /auth/users/reset_username/:
    post:
      operationId: auth_users_reset_username
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - auth
    parameters: []
  /auth/users/reset_username_confirm/:
    post:
      operationId: auth_users_reset_username_confirm
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UsernameResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UsernameResetConfirm'
      tags:
        - auth
    parameters: []
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetPassword'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetPassword'
      tags:
        - auth
    parameters: []
  /auth/users/set_username/:
    post:
      operationId: auth_users_set_username
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetUsername'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetUsername'
      tags:
        - auth
    parameters: []
  /auth/users/{id}/:
    get:
      operationId: auth_users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - auth
    put:
      operationId: auth_users_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - auth
    patch:
      operationId: auth_users_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - auth
    delete:
      operationId: auth_users_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - auth
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /myarticles:
    get:
      operationId: myarticles_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - myarticles
    parameters: []
definitions:
  TokenCreate:
    type: object
    properties:
      password:
        title: Password
        type: string
        minLength: 1
      username:
        title: Username
        type: string
        minLength: 1
  User:
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        readOnly: true
        minLength: 1
  UserCreate:
    required:
      - username
      - password
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      id:
        title: ID
        type: integer
        readOnly: true
      password:
        title: Password
        type: string
        minLength: 1
  Activation:
    required:
      - uid
      - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  SendEmailReset:
    required:
      - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirm:
    required:
      - uid
      - token
      - new_password
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      new_password:
        title: New password
        type: string
        minLength: 1
  UsernameResetConfirm:
    required:
      - new_username
    type: object
    properties:
      new_username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  SetPassword:
    required:
      - new_password
      - current_password
    type: object
    properties:
      new_password:
        title: New password
        type: string
        minLength: 1
      current_password:
        title: Current password
        type: string
        minLength: 1
  SetUsername:
    required:
      - current_password
      - new_username
    type: object
    properties:
      current_password:
        title: Current password
        type: string
        minLength: 1
      new_username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
        
